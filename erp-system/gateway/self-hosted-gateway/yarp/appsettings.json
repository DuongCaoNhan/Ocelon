{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning",
      "Yarp": "Information"
    }
  },
  "AllowedHosts": "*",
  "Kestrel": {
    "Endpoints": {
      "Http": {
        "Url": "http://0.0.0.0:5000"
      },
      "Https": {
        "Url": "https://0.0.0.0:5001"
      }
    }
  },
  "Authentication": {
    "JWT": {
      "Authority": "https://login.microsoftonline.com/your-tenant-id",
      "Audience": "your-client-id",
      "RequireHttpsMetadata": true
    },
    "ApiKey": {
      "HeaderName": "X-API-Key",
      "ValidKeys": [
        "dev-service-key-12345",
        "staging-service-key-67890"
      ]
    }
  },
  "ReverseProxy": {
    "Routes": {
      "hr-service-route": {
        "ClusterId": "hr-cluster",
        "Match": {
          "Path": "/v1/hr/{**catch-all}"
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/v1/hr"
          },
          {
            "PathPrefix": "/api/v1"
          },
          {
            "RequestHeader": "X-Gateway-Source",
            "Set": "YARP-Gateway"
          },
          {
            "RequestHeader": "X-Service-Name",
            "Set": "HR-Service"
          }
        ],
        "RateLimiterPolicy": "hr-rate-limit",
        "AuthorizationPolicy": "authenticated-users",
        "CorsPolicy": "erp-cors"
      },
      "inventory-service-route": {
        "ClusterId": "inventory-cluster",
        "Match": {
          "Path": "/v1/inventory/{**catch-all}"
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/v1/inventory"
          },
          {
            "PathPrefix": "/api/v1"
          },
          {
            "RequestHeader": "X-Gateway-Source",
            "Set": "YARP-Gateway"
          },
          {
            "RequestHeader": "X-Service-Name",
            "Set": "Inventory-Service"
          }
        ],
        "RateLimiterPolicy": "default-rate-limit",
        "AuthorizationPolicy": "authenticated-users",
        "CorsPolicy": "erp-cors"
      },
      "accounting-service-route": {
        "ClusterId": "accounting-cluster",
        "Match": {
          "Path": "/v1/accounting/{**catch-all}"
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/v1/accounting"
          },
          {
            "PathPrefix": "/api/v1"
          },
          {
            "RequestHeader": "X-Gateway-Source",
            "Set": "YARP-Gateway"
          },
          {
            "RequestHeader": "X-Service-Name",
            "Set": "Accounting-Service"
          }
        ],
        "RateLimiterPolicy": "default-rate-limit",
        "AuthorizationPolicy": "authenticated-users",
        "CorsPolicy": "erp-cors"
      },
      "workflow-service-route": {
        "ClusterId": "workflow-cluster",
        "Match": {
          "Path": "/v1/workflow/{**catch-all}"
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/v1/workflow"
          },
          {
            "PathPrefix": "/api/v1"
          },
          {
            "RequestHeader": "X-Gateway-Source",
            "Set": "YARP-Gateway"
          },
          {
            "RequestHeader": "X-Service-Name",
            "Set": "Workflow-Service"
          }
        ],
        "RateLimiterPolicy": "default-rate-limit",
        "AuthorizationPolicy": "authenticated-users",
        "CorsPolicy": "erp-cors"
      },
      "notification-service-route": {
        "ClusterId": "notification-cluster",
        "Match": {
          "Path": "/v1/notifications/{**catch-all}"
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/v1/notifications"
          },
          {
            "PathPrefix": "/api/v1"
          },
          {
            "RequestHeader": "X-Gateway-Source",
            "Set": "YARP-Gateway"
          },
          {
            "RequestHeader": "X-Service-Name",
            "Set": "Notification-Service"
          }
        ],
        "RateLimiterPolicy": "notification-rate-limit",
        "AuthorizationPolicy": "authenticated-users",
        "CorsPolicy": "erp-cors"
      },
      "health-checks-route": {
        "ClusterId": "health-cluster",
        "Match": {
          "Path": "/health/{**catch-all}"
        },
        "Transforms": [
          {
            "RequestHeader": "X-Gateway-Source",
            "Set": "YARP-Gateway"
          }
        ],
        "CorsPolicy": "erp-cors"
      }
    },
    "Clusters": {
      "hr-cluster": {
        "Destinations": {
          "hr-destination": {
            "Address": "http://localhost:5001/",
            "Health": "http://localhost:5001/health"
          }
        },
        "LoadBalancingPolicy": "RoundRobin",
        "HealthCheck": {
          "Active": {
            "Enabled": true,
            "Interval": "00:00:30",
            "Timeout": "00:00:05",
            "Policy": "ConsecutiveFailures",
            "Path": "/health"
          },
          "Passive": {
            "Enabled": true,
            "Policy": "TransportFailureRate",
            "ReactivationPeriod": "00:00:30"
          }
        }
      },
      "inventory-cluster": {
        "Destinations": {
          "inventory-destination": {
            "Address": "http://localhost:5002/",
            "Health": "http://localhost:5002/health"
          }
        },
        "LoadBalancingPolicy": "RoundRobin",
        "HealthCheck": {
          "Active": {
            "Enabled": true,
            "Interval": "00:00:30",
            "Timeout": "00:00:05",
            "Policy": "ConsecutiveFailures",
            "Path": "/health"
          }
        }
      },
      "accounting-cluster": {
        "Destinations": {
          "accounting-destination": {
            "Address": "http://localhost:5003/",
            "Health": "http://localhost:5003/health"
          }
        },
        "LoadBalancingPolicy": "RoundRobin",
        "HealthCheck": {
          "Active": {
            "Enabled": true,
            "Interval": "00:00:30",
            "Timeout": "00:00:05",
            "Policy": "ConsecutiveFailures",
            "Path": "/health"
          }
        }
      },
      "workflow-cluster": {
        "Destinations": {
          "workflow-destination": {
            "Address": "http://localhost:8080/",
            "Health": "http://localhost:8080/actuator/health"
          }
        },
        "LoadBalancingPolicy": "RoundRobin",
        "HealthCheck": {
          "Active": {
            "Enabled": true,
            "Interval": "00:00:30",
            "Timeout": "00:00:05",
            "Policy": "ConsecutiveFailures",
            "Path": "/actuator/health"
          }
        }
      },
      "notification-cluster": {
        "Destinations": {
          "notification-destination": {
            "Address": "http://localhost:3000/",
            "Health": "http://localhost:3000/health"
          }
        },
        "LoadBalancingPolicy": "RoundRobin",
        "HealthCheck": {
          "Active": {
            "Enabled": true,
            "Interval": "00:00:30",
            "Timeout": "00:00:05",
            "Policy": "ConsecutiveFailures",
            "Path": "/health"
          }
        }
      },
      "health-cluster": {
        "Destinations": {
          "gateway-health": {
            "Address": "http://localhost:5000/",
            "Health": "http://localhost:5000/health"
          }
        }
      }
    }
  },
  "RateLimiting": {
    "DefaultPolicy": {
      "PermitLimit": 100,
      "Window": "00:01:00",
      "ReplenishmentPeriod": "00:00:10",
      "TokensPerPeriod": 10,
      "QueueLimit": 10
    },
    "HRPolicy": {
      "PermitLimit": 50,
      "Window": "00:01:00",
      "ReplenishmentPeriod": "00:00:10",
      "TokensPerPeriod": 5,
      "QueueLimit": 5
    },
    "NotificationPolicy": {
      "PermitLimit": 200,
      "Window": "00:01:00",
      "ReplenishmentPeriod": "00:00:05",
      "TokensPerPeriod": 20,
      "QueueLimit": 20
    }
  },
  "CORS": {
    "AllowedOrigins": [
      "http://localhost:3000",
      "http://localhost:3001",
      "http://localhost:4200",
      "https://erp-portal.com",
      "https://admin.erp-portal.com"
    ],
    "AllowedMethods": [
      "GET",
      "POST",
      "PUT",
      "DELETE",
      "PATCH",
      "OPTIONS"
    ],
    "AllowedHeaders": [
      "Authorization",
      "Content-Type",
      "X-API-Key",
      "X-Correlation-ID",
      "X-Environment"
    ],
    "AllowCredentials": true
  },
  "EnvironmentRouting": {
    "Development": {
      "HRService": "http://localhost:5001",
      "InventoryService": "http://localhost:5002",
      "AccountingService": "http://localhost:5003",
      "WorkflowService": "http://localhost:8080",
      "NotificationService": "http://localhost:3000"
    },
    "Staging": {
      "HRService": "http://hr-service-staging.default.svc.cluster.local",
      "InventoryService": "http://inventory-service-staging.default.svc.cluster.local",
      "AccountingService": "http://accounting-service-staging.default.svc.cluster.local",
      "WorkflowService": "http://workflow-service-staging.default.svc.cluster.local:8080",
      "NotificationService": "http://notification-service-staging.default.svc.cluster.local:3000"
    },
    "Production": {
      "HRService": "http://hr-service.default.svc.cluster.local",
      "InventoryService": "http://inventory-service.default.svc.cluster.local",
      "AccountingService": "http://accounting-service.default.svc.cluster.local",
      "WorkflowService": "http://workflow-service.default.svc.cluster.local:8080",
      "NotificationService": "http://notification-service.default.svc.cluster.local:3000"
    }
  },
  "Telemetry": {
    "ApplicationInsights": {
      "ConnectionString": "InstrumentationKey=your-key-here"
    },
    "Jaeger": {
      "AgentHost": "localhost",
      "AgentPort": 6831
    }
  }
}
