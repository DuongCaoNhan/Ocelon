openapi: 3.0.3
info:
  title: Accounting Service API Gateway
  description: Financial and Accounting Management Service for ERP System (Gateway Version)
  version: 1.0.0
  contact:
    name: ERP Development Team
    email: dev@erp-system.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.erp-system.com/v1/accounting
    description: Production server (via API Gateway)
  - url: https://staging-api.erp-system.com/v1/accounting
    description: Staging server (via API Gateway)
  - url: https://dev-api.erp-system.com/v1/accounting
    description: Development server (via API Gateway)

security:
  - BearerAuth: []
  - ApiKeyAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from Azure AD or identity provider
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API Key for service-to-service communication

  schemas:
    AccountDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        accountNumber:
          type: string
        accountName:
          type: string
        accountType:
          type: string
          enum: [Asset, Liability, Equity, Revenue, Expense]
        parentAccountId:
          type: string
          format: uuid
          nullable: true
        isActive:
          type: boolean
        balance:
          type: number
          format: decimal
        createdAt:
          type: string
          format: date-time

    JournalEntryDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        entryNumber:
          type: string
        description:
          type: string
        entryDate:
          type: string
          format: date
        totalAmount:
          type: number
          format: decimal
        status:
          type: string
          enum: [Draft, Posted, Reversed]
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/JournalLineItemDto'
        createdAt:
          type: string
          format: date-time

    JournalLineItemDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        accountId:
          type: string
          format: uuid
        description:
          type: string
        debitAmount:
          type: number
          format: decimal
        creditAmount:
          type: number
          format: decimal

    InvoiceDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        invoiceNumber:
          type: string
        customerId:
          type: string
          format: uuid
        customerName:
          type: string
        invoiceDate:
          type: string
          format: date
        dueDate:
          type: string
          format: date
        subtotal:
          type: number
          format: decimal
        taxAmount:
          type: number
          format: decimal
        totalAmount:
          type: number
          format: decimal
        status:
          type: string
          enum: [Draft, Sent, Paid, Overdue, Cancelled]
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItemDto'
        createdAt:
          type: string
          format: date-time

    InvoiceLineItemDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        description:
          type: string
        quantity:
          type: number
          format: decimal
        unitPrice:
          type: number
          format: decimal
        lineTotal:
          type: number
          format: decimal

    ReportDto:
      type: object
      properties:
        reportType:
          type: string
          enum: [BalanceSheet, ProfitLoss, CashFlow, TrialBalance]
        reportDate:
          type: string
          format: date
        data:
          type: object
          additionalProperties: true
        generatedAt:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        details:
          type: string
        traceId:
          type: string

tags:
  - name: Accounts
    description: Chart of accounts management
  - name: Journal Entries
    description: Journal entry management
  - name: Invoices
    description: Invoice management
  - name: Reports
    description: Financial reporting
  - name: Health
    description: Health check endpoints

paths:
  /accounts:
    get:
      tags:
        - Accounts
      summary: Get chart of accounts
      description: Retrieve the chart of accounts
      parameters:
        - name: accountType
          in: query
          description: Filter by account type
          required: false
          schema:
            type: string
            enum: [Asset, Liability, Equity, Revenue, Expense]
        - name: isActive
          in: query
          description: Filter by active status
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDto'
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
        '500':
          description: Internal server error

    post:
      tags:
        - Accounts
      summary: Create new account
      description: Create a new account in the chart of accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDto'
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
        '500':
          description: Internal server error

  /accounts/{id}:
    put:
      tags:
        - Accounts
      summary: Update account
      description: Update an existing account
      parameters:
        - name: id
          in: path
          required: true
          description: Account ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDto'
      responses:
        '200':
          description: Account updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
        '400':
          description: Bad request
        '404':
          description: Account not found
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
        '500':
          description: Internal server error

  /journal-entries:
    get:
      tags:
        - Journal Entries
      summary: Get journal entries
      description: Retrieve journal entries with optional filtering
      parameters:
        - name: fromDate
          in: query
          description: Filter from date
          required: false
          schema:
            type: string
            format: date
        - name: toDate
          in: query
          description: Filter to date
          required: false
          schema:
            type: string
            format: date
        - name: status
          in: query
          description: Filter by status
          required: false
          schema:
            type: string
            enum: [Draft, Posted, Reversed]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JournalEntryDto'
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
        '500':
          description: Internal server error

    post:
      tags:
        - Journal Entries
      summary: Create journal entry
      description: Create a new journal entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntryDto'
      responses:
        '201':
          description: Journal entry created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntryDto'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
        '500':
          description: Internal server error

  /invoices:
    get:
      tags:
        - Invoices
      summary: Get invoices
      description: Retrieve invoices with optional filtering
      parameters:
        - name: customerId
          in: query
          description: Filter by customer ID
          required: false
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          description: Filter by status
          required: false
          schema:
            type: string
            enum: [Draft, Sent, Paid, Overdue, Cancelled]
        - name: fromDate
          in: query
          description: Filter from date
          required: false
          schema:
            type: string
            format: date
        - name: toDate
          in: query
          description: Filter to date
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceDto'
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
        '500':
          description: Internal server error

    post:
      tags:
        - Invoices
      summary: Create invoice
      description: Create a new invoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceDto'
      responses:
        '201':
          description: Invoice created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDto'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
        '500':
          description: Internal server error

  /invoices/{id}/status:
    put:
      tags:
        - Invoices
      summary: Update invoice status
      description: Update the status of an invoice
      parameters:
        - name: id
          in: path
          required: true
          description: Invoice ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [Draft, Sent, Paid, Overdue, Cancelled]
      responses:
        '200':
          description: Invoice status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDto'
        '400':
          description: Bad request
        '404':
          description: Invoice not found
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
        '500':
          description: Internal server error

  /reports/balance-sheet:
    get:
      tags:
        - Reports
      summary: Generate balance sheet
      description: Generate a balance sheet report
      parameters:
        - name: asOfDate
          in: query
          description: As of date for the report
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Balance sheet generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportDto'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
        '500':
          description: Internal server error

  /reports/profit-loss:
    get:
      tags:
        - Reports
      summary: Generate P&L statement
      description: Generate a profit and loss statement
      parameters:
        - name: fromDate
          in: query
          description: From date for the report
          required: true
          schema:
            type: string
            format: date
        - name: toDate
          in: query
          description: To date for the report
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: P&L statement generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportDto'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
        '500':
          description: Internal server error

  /health:
    get:
      tags:
        - Health
      summary: Health check
      description: Check the health status of the Accounting service
      security: []
      responses:
        '200':
          description: Service is healthy
        '503':
          description: Service is unhealthy
